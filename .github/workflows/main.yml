name: Expo CI CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      appName:
        description: "Application name"
        required: true
        default: "Arab Hardware"
        type: string
      bundleIdentifier:
        description: "Application bundleIdentifier"
        required: true
        default: "ArabHardware"
        type: string
      url:
        description: "Store URL"
        required: true
        default: "https://store.arabhardware.net/"
        type: string
      icon:
        description: "Application icon"
        default: "https://raw.githubusercontent.com/MoatazAbdAlmageed/First-Mobile-App/main/assets/icon.png"
        required: true
        type: string
      splash:
        description: "Application splash"
        default: "https://raw.githubusercontent.com/MoatazAbdAlmageed/First-Mobile-App/main/assets/splash.png"
        required: true
        type: string
      adaptiveIcon:
        description: "Application adaptive-icon"
        default: "https://raw.githubusercontent.com/MoatazAbdAlmageed/First-Mobile-App/main/assets/adaptive-icon.png"
        required: true
        type: string
      email:
        description: "Application owner email"
        default: "moataz@wuilt.com"
        required: true
        type: string
      from:
        description: "Application owner name"
        default: "Moataz Mohammady"
        required: true
        type: string
jobs:
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "appName: $appName"
          echo "bundleIdentifier: $bundleIdentifier"
          echo "url: $url"
          echo "icon: $icon"
          echo "splash: $splash"
          echo "adaptiveIcon: $adaptiveIcon"
          echo "email: $email"
          echo "from: $from"

        env:
          appName: ${{ github.event.inputs.appName }}
          bundleIdentifier: ${{ github.event.inputs.bundleIdentifier }}
          url: ${{ github.event.inputs.url }}
          icon: ${{ github.event.inputs.icon }}
          splash: ${{ github.event.inputs.splash }}
          adaptiveIcon: ${{ github.event.inputs.adaptiveIcon }}
          email: ${{ github.event.inputs.email }}
          from: ${{ github.event.inputs.from }}

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_appName: ${{ github.event.inputs.appName }}
          envkey_bundleIdentifier: ${{ github.event.inputs.bundleIdentifier }}
          envkey_url: ${{ github.event.inputs.url }}
          envkey_icon: ${{ github.event.inputs.icon }}
          envkey_splash: ${{ github.event.inputs.splash }}
          envkey_adaptiveIcon: ${{ github.event.inputs.adaptiveIcon }}
          file_name: .env

  Build-for-android:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: "9.0.4" # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Install deps
        run: yarn install
      - name: Build Android APK Bundle
        run: expo build:android > build-android.log

      - name: Get build-android.log
        id: log
        run: echo ::set-output name=log::$(cat build-android.log)
      - uses: dawidd6/action-send-mail@v3.6.1
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Building android app job result
          # Required recipients' addresses:
          to: ${{ github.event.inputs.email }}
          # Required sender full name (address can be skipped):
          from: ${{ github.event.inputs.from }}
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          body: Build job of ${{github.repository}} completed successfully! ${{ steps.log.outputs.log }}
          # Optional HTML body read from file:
          html_body: Build job of ${{github.repository}} completed successfully! ${{ steps.log.outputs.log }}
          priority: low

  build-for-IOS:
    if: ${{ false }} # disa ble ios for now TODO: remove this
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/setup-java@v1.4.3
        with:
          java-version: "9.0.4" # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          apple-id: ${{ secrets.EXPO_APPLE_ID }} # Apple ID to download from Apple Developer when Xcode not available in local
          apple-id-password: ${{ secrets.EXPO_APPLE_PASSWORD }}
      - uses: expo/expo-github-action@v7
        id: ios
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Install deps
        run: yarn install
      - name: Build iOS app
        run: expo build:ios  > build-ios.log
        env:
          EXPO_APPLE_ID: ${{secrets.EXPO_APPLE_ID}}
          EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
          app_specific_password: ${{ secrets.EXPO_APP_SPECIFIC_PASSWORD  }}

      - name: Get build-ios.log
        id: log
        run: echo ::set-output name=log::$(cat build-ios.log)
      - uses: dawidd6/action-send-mail@v3.6.1
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Building iso app job result
          # Required recipients' addresses:
          to: ${{ github.event.inputs.email }}
          # Required sender full name (address can be skipped):
          from: ${{ github.event.inputs.from }}
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          body: Build job of ${{github.repository}} completed successfully! ${{ steps.log.outputs.log }}
          # Optional HTML body read from file:
          html_body: Build job of ${{github.repository}} completed successfully! ${{ steps.log.outputs.log }}
          priority: low
